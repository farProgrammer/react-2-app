{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\New\\\\OneDrive\\\\Desktop\\\\react-2\\\\snack-or-booze\\\\src\\\\NewMenuItemForm.js\";\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { useFormik } from 'formik';\nimport SnackOrBoozeApi from \"./Api\";\nimport \"./NewMenuItemForm.css\";\n\nconst NewMenuItemForm = ({\n  items,\n  setItems\n}) => {\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      itemType: \"\",\n      description: \"\",\n      recipe: \"\",\n      serve: \"\"\n    },\n\n    validate() {\n      const errors = {};\n\n      if (!formik.values.name) {\n        errors.name = 'Required';\n      }\n\n      if (!formik.values.itemType || formik.values.itemType === \"Select item category\") {\n        errors.itemType = 'Required';\n      }\n\n      if (!formik.values.description) {\n        errors.description = 'Required';\n      }\n\n      if (!formik.values.recipe) {\n        errors.recipe = 'Required';\n      }\n\n      if (!formik.values.serve) {\n        errors.serve = 'Required';\n      }\n\n      return errors;\n    },\n\n    onSubmit: async function (values) {\n      values.itemType += 's';\n      const id = values.name.toLowerCase().split(' ').join('-');\n      const menuItem = {\n        id,\n        ...values\n      };\n      delete menuItem.itemType;\n      await SnackOrBoozeApi.postMenuItem(menuItem, values.itemType);\n      setItems([...items, menuItem]);\n      history.push(`/${values.itemType}`);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewMenuItemForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Add a Menu Item!\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"NewMenuItemForm-form\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Item Name: \"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"Name of menu item\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), formik.touched.className && formik.errors.name ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewMenuItemForm-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, formik.errors.name) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"itemType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"itemType\",\n    id: \"itemType\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.itemType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Select item category\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"snack\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"drink\")), formik.touched.itemType && formik.errors.itemType ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewMenuItemForm-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, formik.errors.itemType) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"description\",\n    id: \"description\",\n    placeholder: \"Description of the menu item\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), formik.touched.description && formik.errors.description ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewMenuItemForm-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, formik.errors.description) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Recipe\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"recipe\",\n    id: \"recipe\",\n    placeholder: \"Recipe for the menu item\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.recipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), formik.touched.recipe && formik.errors.recipe ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewMenuItemForm-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, formik.errors.recipe) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serve\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Serve\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"serve\",\n    id: \"serve\",\n    placeholder: \"Describe how to serve the menu item\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.serve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), formik.touched.serve && formik.errors.serve ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewMenuItemForm-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, formik.errors.serve) : null), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nexport default NewMenuItemForm;","map":{"version":3,"sources":["C:/Users/New/OneDrive/Desktop/react-2/snack-or-booze/src/NewMenuItemForm.js"],"names":["React","useHistory","Button","Form","FormGroup","Label","Input","useFormik","SnackOrBoozeApi","NewMenuItemForm","items","setItems","history","formik","initialValues","name","itemType","description","recipe","serve","validate","errors","values","onSubmit","id","toLowerCase","split","join","menuItem","postMenuItem","push","handleSubmit","handleChange","handleBlur","touched","className"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { useFormik } from 'formik';\nimport SnackOrBoozeApi from \"./Api\";\nimport \"./NewMenuItemForm.css\";\n\nconst NewMenuItemForm = ({ items, setItems }) => {\n  const history = useHistory();\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      itemType: \"\",\n      description: \"\",\n      recipe: \"\",\n      serve: \"\"\n    },\n    validate() {\n      const errors = {};\n      if (!formik.values.name) {\n        errors.name = 'Required';\n      } \n      if (!formik.values.itemType || formik.values.itemType === \"Select item category\") {\n        errors.itemType = 'Required';\n      } \n      if (!formik.values.description) {\n        errors.description = 'Required';\n      } \n      if (!formik.values.recipe) {\n        errors.recipe = 'Required';\n      } \n      if (!formik.values.serve) {\n        errors.serve = 'Required';\n      } \n      return errors;\n    },\n    onSubmit: async function(values) {\n      values.itemType += 's';\n      const id = values.name.toLowerCase().split(' ').join('-');\n      const menuItem = { id, ...values };\n      delete menuItem.itemType;\n      await SnackOrBoozeApi.postMenuItem(menuItem, values.itemType);\n      setItems([ ...items, menuItem ]);\n      history.push(`/${values.itemType}`);\n    }\n  });\n\n  return (\n    <div className=\"NewMenuItemForm\">\n      <h1>Add a Menu Item!</h1>\n      <Form \n        className=\"NewMenuItemForm-form\"\n        onSubmit={formik.handleSubmit}\n      >\n        <FormGroup>\n          <Label for=\"name\">Item Name: </Label>\n          <Input \n            type=\"text\" \n            name=\"name\" \n            id=\"name\" \n            placeholder=\"Name of menu item\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n          />\n          {formik.touched.className && formik.errors.name ? (\n            <div className=\"NewMenuItemForm-error\">{formik.errors.name}</div>\n          ) : null}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"itemType\">Type</Label>\n          <Input type=\"select\" \n            name=\"itemType\" \n            id=\"itemType\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.itemType}\n          >\n            <option>Select item category</option>\n            <option>snack</option>\n            <option>drink</option>\n          </Input>\n          {formik.touched.itemType && formik.errors.itemType ? (\n            <div className=\"NewMenuItemForm-error\">{formik.errors.itemType}</div>\n          ) : null}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"description\">Description</Label>\n          <Input \n            type=\"text\"\n            name=\"description\" \n            id=\"description\" \n            placeholder=\"Description of the menu item\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.description}\n          />\n          {formik.touched.description && formik.errors.description ? (\n            <div className=\"NewMenuItemForm-error\">{formik.errors.description}</div>\n          ) : null}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"recipe\">Recipe</Label>\n          <Input \n            type=\"text\" \n            name=\"recipe\" \n            id=\"recipe\" \n            placeholder=\"Recipe for the menu item\" \n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.recipe}\n          />\n          {formik.touched.recipe && formik.errors.recipe ? (\n            <div className=\"NewMenuItemForm-error\">{formik.errors.recipe}</div>\n          ) : null}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"serve\">Serve</Label>\n          <Input \n            type=\"text\" \n            name=\"serve\" \n            id=\"serve\" \n            placeholder=\"Describe how to serve the menu item\" \n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.serve}\n          />\n          {formik.touched.serve && formik.errors.serve ? (\n            <div className=\"NewMenuItemForm-error\">{formik.errors.serve}</div>\n          ) : null}\n        </FormGroup>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default NewMenuItemForm;"]},"metadata":{},"sourceType":"module"}